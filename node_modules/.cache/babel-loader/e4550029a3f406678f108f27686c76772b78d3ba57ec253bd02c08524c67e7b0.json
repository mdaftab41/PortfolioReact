{"ast":null,"code":"function Validation(contact) {\n  const error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/;\n  if (contact.fName.trim() === \"\") {\n    error.fName = \"First Name is Required\";\n  }\n  if (contact.lName.trim() === \"\") {\n    error.lName = \"Last Name is required\";\n  }\n  if (contact.message.trim() === \"\") {\n    error.message = \"Message is Required\";\n  }\n  if (contact.email.trim() === \"\") {\n    error.email = \"Email is Required\";\n  } else if (!email_pattern.test(contact.email)) {\n    error.email = \"Email doesn't match the correct format\";\n  }\n  return error;\n}\n_c = Validation;\nexport default V;\n{/** *\r\n function Validation ({contact})  {\r\n const error ={}\r\n const email_pattern = /[^\\s@]+@[^\\s@]+.\\[^\\s@]{2,6}$/;\r\n if(contact.fName===\"\"){\r\n error.fName =\"fName is Required\"\r\n }\r\n if(contact.lName===\"\"){\r\n    error.lName=\"lName is required\"\r\n }\r\n if(contact.massage===\"\"){\r\n    error.massage=\"Massage is Required\"\r\n }\r\n if(contact.email===\"\"){\r\n    error.email=\"Email is Require\"\r\n }\r\n else if (!email_pattern.test(contact.email)){\r\n    error.email=\"Email did'nt match\"\r\n }\r\n return error;\r\n  \r\n }\r\n export default Validation;  **/}\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","contact","error","email_pattern","fName","trim","lName","message","email","test","_c","V","$RefreshReg$"],"sources":["D:/Desktop Apps coding/portfplio.js/my-app/src/component/Validation.jsx"],"sourcesContent":["function Validation(contact) {\r\n    const error = {};\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/;\r\n  \r\n    if (contact.fName.trim() === \"\") {\r\n      error.fName = \"First Name is Required\";\r\n    }\r\n    if (contact.lName.trim() === \"\") {\r\n      error.lName = \"Last Name is required\";\r\n    }\r\n    if (contact.message.trim() === \"\") {\r\n      error.message = \"Message is Required\";\r\n    }\r\n    if (contact.email.trim() === \"\") {\r\n      error.email = \"Email is Required\";\r\n    } else if (!email_pattern.test(contact.email)) {\r\n      error.email = \"Email doesn't match the correct format\";\r\n    }\r\n  \r\n    return error;\r\n  }\r\n  \r\n  export default V;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/** *\r\nfunction Validation ({contact})  {\r\nconst error ={}\r\nconst email_pattern = /[^\\s@]+@[^\\s@]+.\\[^\\s@]{2,6}$/;\r\nif(contact.fName===\"\"){\r\n error.fName =\"fName is Required\"\r\n}\r\nif(contact.lName===\"\"){\r\n    error.lName=\"lName is required\"\r\n}\r\nif(contact.massage===\"\"){\r\n    error.massage=\"Massage is Required\"\r\n}\r\nif(contact.email===\"\"){\r\n    error.email=\"Email is Require\"\r\n}\r\n else if (!email_pattern.test(contact.email)){\r\n    error.email=\"Email did'nt match\"\r\n}\r\nreturn error;\r\n  \r\n}\r\nexport default Validation;  **/}"],"mappings":"AAAA,SAASA,UAAUA,CAACC,OAAO,EAAE;EACzB,MAAMC,KAAK,GAAG,CAAC,CAAC;EAChB,MAAMC,aAAa,GAAG,+BAA+B;EAErD,IAAIF,OAAO,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC/BH,KAAK,CAACE,KAAK,GAAG,wBAAwB;EACxC;EACA,IAAIH,OAAO,CAACK,KAAK,CAACD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC/BH,KAAK,CAACI,KAAK,GAAG,uBAAuB;EACvC;EACA,IAAIL,OAAO,CAACM,OAAO,CAACF,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACjCH,KAAK,CAACK,OAAO,GAAG,qBAAqB;EACvC;EACA,IAAIN,OAAO,CAACO,KAAK,CAACH,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC/BH,KAAK,CAACM,KAAK,GAAG,mBAAmB;EACnC,CAAC,MAAM,IAAI,CAACL,aAAa,CAACM,IAAI,CAACR,OAAO,CAACO,KAAK,CAAC,EAAE;IAC7CN,KAAK,CAACM,KAAK,GAAG,wCAAwC;EACxD;EAEA,OAAON,KAAK;AACd;AAACQ,EAAA,GApBMV,UAAU;AAsBjB,eAAeW,CAAC;AAQlB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAtBC;AAsB+B,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}